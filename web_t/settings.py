"""
Django settings for web_t project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "%nkb6gj1xti%b4-(%xy4r_ihc&=z)lvns+%n1sn#^k^k7mxc*^"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# app名(文件夹)和模型名(类名)，但是默认为models.py
# AUTH_USER_MODEL = 'own_models.User' # 权限认证模型
# Application definition
# INSTALLED_APPS += ("doj",) # package
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",  # 映射前端静态文件
    "own_models",
    "permission_system",  # 权限管理系统
]
# 允许所有主机的请求（开发环境临时方案）
ALLOWED_HOSTS = ['*'] 
CSRF_TRUSTED_ORIGINS = [
    "https://*.app.cloudstudio.work",
    "https://*.cloudstudio.cn"  # 如果使用国内版加上此项
    # 其他可信来源...
    "http://127.0.0.1:8000/"
]
# 正式部署时应替换为具体域名
# CSRF_TRUSTED_ORIGINS = [
#     "https://your-production-domain.com",
# ]
# ALLOWED_HOSTS = ["your-production-domain.com"]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "permission_system.middleware.PermissionMiddleware",  # 权限检查中间件
]


ROOT_URLCONF = "web_t.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        # 'DIRS': [BASE_DIR + '/html'],
        # 'DIRS': [os.path.join(BASE_DIR, 'templates')],
        "DIRS": [
            os.path.join(BASE_DIR, "templates"),  # 主目录
            os.path.join(BASE_DIR, "html"),  #  备用目录（如果有）
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "web_t.wsgi.application"


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": "web_t",
        "USER": "root",
        "PASSWORD": "Root@@__135230",
        "HOST": "47.109.155.118",
        "PORT": "3309",
        "OPTIONS": {
            "connect_timeout": 60,  # 连接超时时间增加到60秒
            "read_timeout": 60,      # 读取超时时间
            "write_timeout": 60,     # 写入超时时间
            "init_command": "SET sql_mode='STRICT_TRANS_TABLES'",  # 初始化命令
            "charset": "utf8mb4",    # 使用utf8mb4字符集
        },
        "CONN_MAX_AGE": 60,          # 连接最大存活时间（秒）
        "ATOMIC_REQUESTS": False,    # 不要将每个请求包装在事务中
    }
}

# 配置缓存以减少数据库查询
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
        'TIMEOUT': 300,  # 5分钟缓存
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/
# 静态资源路径
STATIC_URL = "/static/"
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),  # 确保这里指向你的静态文件目录
]

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"